
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserSession {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  lastActiveAt  DateTime @updatedAt
  ipHash        String
  fingerprint   String
  language      String   @default("ko")
  participants  RoomParticipant[]
  reports       Report[] @relation("Reporter")
}

model Room {
  id           String            @id @default(cuid())
  createdAt    DateTime          @default(now())
  closedAt     DateTime?
  participants RoomParticipant[]
  messages     Message[]
  reports      Report[]
}

model RoomParticipant {
  id        String       @id @default(cuid())
  room      Room         @relation(fields: [roomId], references: [id])
  roomId    String
  session   UserSession  @relation(fields: [sessionId], references: [id])
  sessionId String
  nickname  String
  messages  Message[]
}

model Message {
  id         String          @id @default(cuid())
  room       Room            @relation(fields: [roomId], references: [id])
  roomId     String
  sender     RoomParticipant @relation(fields: [senderId], references: [id])
  senderId   String
  content    String
  createdAt  DateTime        @default(now())
}

enum ReportReason {
  SPAM
  HATE
  SEXUAL
  OTHER
}

enum ReportStatus {
  OPEN
  REVIEWING
  DONE
}

model Report {
  id                 String        @id @default(cuid())
  reporter           UserSession   @relation("Reporter", fields: [reporterSessionId], references: [id])
  reporterSessionId  String
  reportedRoom       Room          @relation(fields: [reportedRoomId], references: [id])
  reportedRoomId     String
  reason             ReportReason
  detail             String?
  status             ReportStatus  @default(OPEN)
  createdAt          DateTime      @default(now())
}
